{"ast":null,"code":"var _jsxFileName = \"X:\\\\Projects\\\\Pro\\\\frontend\\\\src\\\\components\\\\ResumeUploadForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ResumeUploadForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResumeUploadForm = () => {\n  _s();\n  const [resume, setResume] = useState(null);\n  const [jobDescription, setJobDescription] = useState('');\n  const [answer, setAnswer] = useState(\"\");\n  const handleUpload = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('resume', resume);\n    formData.append('jd', jobDescription);\n    try {\n      const response = await axios.post('http://localhost:3000/upload', formData);\n      console.log(response.data.response);\n      setAnswer(response.data.response);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Your Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setResume(e.target.files[0]),\n        required: true,\n        id: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: jobDescription,\n        onChange: e => setJobDescription(e.target.value),\n        placeholder: \"Job Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"upload-button\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"answer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"ATS Score and Suggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: answer && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ResumeUploadForm, \"nzOK3vviXYuTNcc9pkaqLBYD3Do=\");\n_c = ResumeUploadForm;\nexport default ResumeUploadForm;\nvar _c;\n$RefreshReg$(_c, \"ResumeUploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ResumeUploadForm","_s","resume","setResume","jobDescription","setJobDescription","answer","setAnswer","handleUpload","e","preventDefault","formData","FormData","append","response","post","console","log","data","err","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","files","required","id","value","placeholder","_c","$RefreshReg$"],"sources":["X:/Projects/Pro/frontend/src/components/ResumeUploadForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ResumeUploadForm.css';\r\n\r\nconst ResumeUploadForm = () => {\r\n  const [resume, setResume] = useState(null);\r\n  const [jobDescription, setJobDescription] = useState('');\r\n  const  [ answer ,setAnswer] =useState(\"\");\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('resume', resume);\r\n    formData.append('jd', jobDescription);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/upload', formData);\r\n      console.log(response.data.response);\r\n      setAnswer(response.data.response);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-form-container\">\r\n      <form onSubmit={handleUpload} className=\"upload-form\">\r\n        <h2>Upload Your Resume</h2>\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => setResume(e.target.files[0])}\r\n          required\r\n          id='file'\r\n        />\r\n        <textarea\r\n          value={jobDescription}\r\n          onChange={(e) => setJobDescription(e.target.value)}\r\n          placeholder=\"Job Description\"\r\n        />\r\n        <button type=\"submit\" className=\"upload-button\">Upload</button>\r\n        \r\n      </form>\r\n\r\n      <div id =\"answer\">\r\n        <div><h2>ATS Score and Suggestions</h2></div>\r\n        <div>{answer && <p>{answer}</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeUploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}